version: '3.5'

networks:
  shared:
    driver: ${NETWORKS_DRIVER}

services:

### PostGIS ##############################################
  postgis14-3.2:
    image: kartoza/postgis:${POSTGRES_VERSION}
    volumes:
      - ${DATA_PATH_HOST}/postgis${POSTGRES_VERSION}:/var/lib/postgresql
    environment:
      - POSTGRES_DB=${POSTGRES_DB}
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASS=${POSTGRES_PASSWORD}
    ports:
      - "${POSTGRES_PORT}:5432"
    restart: on-failure
    healthcheck:
      test: "exit 0"
    networks:
      - shared

### MySQL ################################################
  mysql8:
    build:
      context: ./mysql
      args:
        - MYSQL_VERSION=${MYSQL_VERSION}
    environment:
      - MYSQL_DATABASE=${MYSQL_DATABASE}
      - MYSQL_USER=${MYSQL_USER}
      - MYSQL_PASSWORD=${MYSQL_PASSWORD}
      - MYSQL_ROOT_PASSWORD=${MYSQL_ROOT_PASSWORD}
      - TZ=${WORKSPACE_TIMEZONE}
    volumes:
      - ${DATA_PATH_HOST}/mysql${MYSQL_VERSION}:/var/lib/mysql
      - ${MYSQL_ENTRYPOINT_INITDB}:/docker-entrypoint-initdb.d
    ports:
      - "${MYSQL_PORT}:3306"
    restart: on-failure
    networks:
      - shared

### pgAdmin ##############################################
  pgadmin:
    image: dpage/pgadmin4:latest
    environment:
      - "PGADMIN_DEFAULT_EMAIL=${PGADMIN_DEFAULT_EMAIL}"
      - "PGADMIN_DEFAULT_PASSWORD=${PGADMIN_DEFAULT_PASSWORD}"
    ports:
      - "${PGADMIN_PORT}:80"
    volumes:
      - ${DATA_PATH_HOST}/pgadmin:/var/lib/pgadmin
    restart: on-failure
    depends_on:
      - ${PGADMIN_DB_ENGINE}
    networks:
      - shared

### phpMyAdmin ###########################################
  phpmyadmin:
    build: ./phpmyadmin
    environment:
      - PMA_ARBITRARY=1
      - MYSQL_USER=${PMA_USER}
      - MYSQL_PASSWORD=${PMA_PASSWORD}
      - MYSQL_ROOT_PASSWORD=${PMA_ROOT_PASSWORD}
      - MAX_EXECUTION_TIME=${PMA_MAX_EXECUTION_TIME}
      - MEMORY_LIMIT=${PMA_MEMORY_LIMIT}
      - UPLOAD_LIMIT=${PMA_UPLOAD_LIMIT}
    ports:
      - "${PMA_PORT}:80"
    restart: on-failure
    depends_on:
      - "${PMA_DB_ENGINE}"
    networks:
      - shared

### PG Backup ##############################################
  pg-backup:
    image: kartoza/pg-backup:14-3.2
    restart: 'always'
    volumes:
      - ${DATA_PATH_HOST}/pg_backup:/backups
    environment:
      - POSTGRES_HOST=${PGADMIN_DB_ENGINE}
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASS=${POSTGRES_PASSWORD}
      - POSTGRES_PORT=${POSTGRES_PORT}
      - DBLIST=${POSTGRES_BACKUP_DBLIST}
      #- CRON_SCHEDULE="* * * * *"
    depends_on:
      - ${PGADMIN_DB_ENGINE}
    healthcheck:
      interval: 60s
      timeout: 30s
      retries: 3
      test: "pg_isready"
    networks:
      - shared


